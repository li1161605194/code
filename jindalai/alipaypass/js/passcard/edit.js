// Generated by CoffeeScript PHP 1.3.1
(function () {
    var loadPass, modelWrapper, passType,passAtBack,userGuide;

    $('div[data-bind~="foreach:"]').each(function () {
        var texts;
        texts = $(this).contents().filter(function () {
            return this.nodeType === 3;
        });
        return texts.remove();
    });

    $('script[type="text/html"]').each(function () {
        var elem, text;
        elem = $(this);
        text = $.trim(elem.text());
        if (/^<[\s\S]+>$/.test(text)) {
            return elem.text(text);
        }
    });

    modelWrapper = {
        model: ko.observable(null)
    };

    passType = ko.observable('');
	passAtBack = ko.observable('');


	//页面加载时初始化alipass
	var tempId = $("input[name=tempId]").val();
	var productType = $("input[name=defaultProduct]").val();
    var copyFrom = $("input[name=copyFrom]").val();
    var func = $("input[name=func]").val();
	var subscription = null,subBack = null;
	loadProductBusiness({"tempId":tempId,productType:productType,copyFrom:copyFrom,func:func},function(data){
		var moedelNameType=window.location.href.split("_v*")[1]?window.location.href.split("_v*")[1]:"kong";
		var temp=data[moedelNameType]?data[moedelNameType]:data["kong"];
		model = new window.models.Pass($.parseJSON(temp.data));
		elem = document.getElementById('main');
		modelWrapper.model(model);
		if (!ko.dataFor(elem)) {
			ko.applyBindings(modelWrapper, elem);
		}
		if (subscription) {
			subscription.dispose();
		}
		if(subBack){
			subBack.dispose();
		}
		passType(model.type());
		passAtBack(model.showBack());
		subscription = model.type.subscribe(function (val) {
			passType(val);
		});
		subBack = model.showBack.subscribe(function (val) {
			passAtBack(val);
		});
		if($("input[name=rookie]").val() == "true"){
			userGuide.init();
		}
		return window.model = model;
	});
	//页面关闭时，缓存编辑的内容  todo 现在没有利用缓存
	$(window).unload(function(e){
		var productData = model.export();
		saveProductToLocal(tempId,productData);
	})
	//页面每两分钟更新一次缓存
	setInterval(function(){
		var productData = model.export();
		saveProductToLocal(tempId,productData);
	},72000);
	//tab切换和新手导航
    $(function () {
        var tabs,tools,editFields,showEl;
       // tabs = $('div.left-tabs a');
		var isComplete = true;
		var fieldsConfig = {
			headFields:"头部区块",
			primaryFields:"第一区块",
			secondaryFields:"第二区块",
			auxiliaryFields:"辅助区块",
			operation:"操作区块"
		}

		var edit ={
			pass:$("#pass"),
			tabs:$('div.left-tabs a'),
			tabBody:$("#edit .edit-wrapper"),
			showFields:$("#pass [data-pass-range]:visible"),
			findFields:function(name){
				return edit.pass.find("[data-pass-range="+name+"]");
			},
			findTools:function(name){
				return $(".tooltip").filter(':contains('+fieldsConfig[name]+')');
			},
			//显示tab项
			// itemId规则，二级导航如：faceFields.headFields ；一级导航如：faceFields
			showTabItem:function(itemId){
				if(!itemId) {return;}
				//解析传入的itemId
				var item = itemId.split(".");
				//为一些特定的item加入特殊处理
				switch (item[0]){
					case "faceFields":
						edit.showFaceFields(item[1]);
						break;
					default :
						edit.hideFaceFields();
						edit.hideCover();
						edit.showTabNav(item[0]);
						edit.showTabBody(item[0]);
				}
				userGuide.activeStepId = itemId;
				edit.autoFlip(item[0]);
			},
			showTabNav:function(itemId){
				if(!itemId) return;
				edit.tabs.filter(".on").toggleClass("on",false);
				edit.tabs.filter("[href=#"+itemId+"]").toggleClass("on",true);
			},
			showTabBody:function(itemId){
				if(!itemId) return;
				edit.tabBody.filter(".on").toggleClass("on",false);
				edit.tabBody.filter("#"+itemId).toggleClass("on",true);
			},
			//显示正面区域 正面区域是二级导航需要单独处理
			showFaceFields:function(fieldName){
				var tools,
					name = fieldName || "headFields",
					time = modelWrapper.model().atBack ? 700 : 150;
				//切换到正面区域
				edit.showTabNav("faceFields");
				edit.showTabBody(name);
				//切换二级导航，显示覆盖提示层
				setTimeout(function(){
					$("#pass [data-pass-range]:visible").tooltip("show");
					tools = $(".tooltip");
					tools.css("cursor","pointer");
					tools.filter(".on").toggleClass("on",false);
					edit.findTools(name).toggleClass("on",true);
					edit.showCover(null,{cover:edit.findFields(name)});
				},time);
			},
			hideFaceFields:function(){
				$("#pass [data-pass-range]").tooltip("hide");
			},
			//切换正反面
			autoFlip:function(itemId){
				var back, model;
				back = !!(itemId === "backFields");
				model = modelWrapper.model();
				if (back === model.atBack) {
					return;
				}
				model.showBack(back);
			},
			//显示覆盖提示层
			showCover:function(el,options){
				var cover = options ? options.cover : [];
				if(el && el.attr('href')){
					var href = el.attr('href').replace("#", "");
					if (href == "operation") {
						cover = $("#pass .operations");
					} else if(href == "headFields"){
						cover = $("#J-headField");
					}else {
						cover = $("#pass ." + href.replace("Fields", "") + ":visible");
					}
				}
				if (cover.length) {
					$("<div id='showCover'></div>").appendTo($("body")).css({
						position: "absolute",
						left: cover.offset().left,
						top: cover.offset().top,
						width: cover.outerWidth(),
						height: cover.outerHeight(),
						backgroundColor: "rgba(255,102,0,0.7)",
						"box-shadow":"0 0 8px #666"
					})
					setTimeout(function () {
						edit.hideCover();
					}, 1000);
				}
			},
			hideCover:function(){
				$("#showCover").remove();
			},
			bindTabEvent:function(){
				edit.tabs.click(function(e){
					e.preventDefault();
					if(!isComplete) return;
					setTimeout(function(){isComplete = true;},300);
					isComplete = false;
					var el = $(e.target);
					var tabItemId = el.attr("href").replace("#","");
					if (el.hasClass('on')) {return;}
					edit.showTabItem(tabItemId);
				});
				//二级定位
				edit.pass.on("click","[data-rel=tooltip]",function(e){
					var el = $(this),
						range = el.attr("href") || el.attr("data-pass-range");
					edit.showTabItem("faceFields."+range);
				});
				//对logo，title和海报的反向定位
				edit.pass.on("click",".logo,.titles,.strip",function(e){
					edit.showTabItem("basicInfo");
					edit.showCover(null,{cover:$(this)});
					$("#edit").animate({
						scrollTop:300
					},300);
				});
				//切换其他信息
				edit.pass.on("click",".foot .rotate",function(e){
					if(!modelWrapper.model().atBack){
						setTimeout(function(){
							edit.showTabItem("faceFields");
						},400);
					}
				});
				//二级导航
				$("body").on("click",".tooltip",function(e){
					var el = $(this);
					var stepId = getStepByNode(el);
					edit.showTabItem("faceFields." + stepId);
				});
				//切换type
				passType.subscribe(function (val) {
					var tab;
					tab = edit.tabs.filter('[href="#auxiliaryFields"]');
					return tab.toggle(val !== 'coupon');
				});
				//切换正反面
				passAtBack.subscribe(function(atBack){
					if(atBack){
						edit.showTabItem("backFields");
					}
				});
			}
		}
		edit.bindTabEvent();

		window.PassView = {
			showTabItem:edit.showTabItem,
			showCover:edit.showCover,
			hideCover:edit.hideCover
		}

		//一些函数
		function getValue(data,path){
			var val = data;
			var path = path.split(".");
			$.each(path,function(i,n){
				if(val && !$.isEmptyObject(val)){
					val = val[n];
				}
			});
			return val;
		}
		function validRequired(val,fields){
			var ret = null;
			if(!val || val == ""){
				ret = {};
				ret.cnName = fields.cnName;
				ret.Msg = "你还没有填写"+ fields.cnName+"，"+ fields.cnName+"不能为空。";
			}
			return ret;
		}
		//根据选中的提示按钮确定步奏
		function getStepByNode(el){
			if(!el){return;}
			var stepId;
			var text = el.find(".tooltip-inner").text();
			for(var fields in fieldsConfig){
				if(fieldsConfig[fields] == text){
					stepId = fields;
				}
			}
			return stepId;
		}
		//用户引导
		userGuide = {
			guide:$(".edit-userGuide"),
			tabs:$('div.left-tabs a'),
			activeStepId:$('div.left-tabs a').filter(".on").attr("href").replace("#",""),
			faceFieldsStepArr:[],
			isNewUser:$("input[name=rookie]").val() == "true" ? true : false,
			init:function(){
				//当前步奏的标识
				userGuide.toolContainer = userGuide.guide.find(".edit-userGuide-tooltip-body");
				userGuide.editNextBtn = $("#edit button[data-role=nextStep]");
				userGuide.placeUserGuide();
				userGuide.tool(userGuide.activeStepId);
				userGuide.bindEvent();
			},
			//显示新手引导
			placeUserGuide:function(){
				var guide = userGuide.guide,
					edit = $("#edit"),
					footer = $('.ui-footer'),
					editWidth = edit.width(),
					editOffset = edit.offset(),
					ww = window.innerWidth;
				guide.show();
				guide.find(".edit-userGuide-left").css("width",editOffset.left);
				guide.find(".edit-userGuide-right").css("width",ww-editOffset.left-editWidth);
				guide.find(".edit-userGuide-action").css({width:editWidth,left:editOffset.left});
				guide.find(".edit-userGuide-tooltip").css({left:editOffset.left - 345});
				footer.css("bottom","-60px");
				edit.find(".intro").hide();
				userGuide.editNextBtn.hide();
			},
			//隐藏新手引导
			hideUserGuide:function(){
				if(!userGuide.isNewUser) return;
				var edit = $("#edit");
				userGuide.guide.hide();
				edit.find(".intro").show();
				userGuide.editNextBtn.show();
				$("input[name=rookie]").val("false");
			},
			//下一步事件
			handleNextStep:function(){
				var activeStepId = userGuide.activeStepId,
					nextStepId;
				var result = userGuide.checkedCurrentStepCompleted(activeStepId);
				//校验基础信息是否已经填写完成
				if(!$.isEmptyObject(result.data) && !result.success){
					var msgArr = [];
					$.each(result.data,function(i,n){
						msgArr.push( '<b>'+n.cnName+'</b>');
					});
					var msg = "还没有填写以下内容：<br>"+msgArr.join(",");
					userGuide.errMsg(msg);
					return false;
				}else{
					userGuide.clearErrMsg();
				}
				nextStepId = userGuide.getNextStepId(activeStepId);
				if(nextStepId == "locations"){nextStepId = "savePass"}
				if(nextStepId){
					userGuide.showUserGuideStep(nextStepId);
				}else{
					userGuide.hideUserGuide();
				}
			},
			getNextStepId:function(activeId){
				var nextId,activeStepId = activeId || userGuide.activeStepId,
					activeStep = userGuide.tabs.filter(".on"),
					nextStep = activeStep.next("a");
				if(activeStepId.split(".")[0] == "faceFields"){
					var activeFaceStep = $(".tooltip").filter(".on");
					var activeFaceStepId = getStepByNode(activeFaceStep);
					var nextFaceStepId = userGuide.getNextFaceStepId(activeFaceStepId);
					if(nextFaceStepId){
						nextId = "faceFields." + nextFaceStepId;
					}else{
						nextId = nextStep.length ? nextStep.attr("href").replace("#","") : null;
					}
				}else{
					nextId = nextStep.length ? nextStep.attr("href").replace("#","") : null;
					if(nextId == "faceFields"){
						nextId = nextId +"."+userGuide.getNextFaceStepId();
					}
				}
				return nextId;
			},
			//显示新手引导步奏
			showUserGuideStep:function(nextStepId){
				edit.showTabItem(nextStepId);
				userGuide.tool(nextStepId);
				if(nextStepId == "savePass"){
					userGuide.hideUserGuide();
				}
				userGuide.activeStepId = nextStepId;
			},
			//错误提示
			errMsg:function(msg){
				userGuide.guide.find(".edit-userGuide-errMsg").html(msg);
			},
			clearErrMsg:function(){
				userGuide.guide.find(".edit-userGuide-errMsg").html("");
			},
			//提示
			tool:function(nextStepId){
				if(!userGuide.isNewUser) return;
				var guide = userGuide.guide;
				var model = modelWrapper.model();
				var product = model.product();
				var editDom = userGuide.getEditDom(nextStepId);
				var toolDom = editDom.find(".userGuide-tool[data-product="+product+"]").length
					? editDom.find(".userGuide-tool[data-product="+product+"]")
					: editDom.find(".userGuide-tool[data-product=default]");

				if(toolDom.length){
					userGuide.hideTool();
					setTimeout(function(){
						userGuide.showTool();
					},310);
					toolDom.appendTo(userGuide.toolContainer.empty()).show();
				}else{
					userGuide.hideTool();
				}
			},
			showTool:function(){
				userGuide.guide.find(".edit-userGuide-tooltip").addClass("on");
			},
			hideTool:function(){
				userGuide.guide.find(".edit-userGuide-tooltip").removeClass("on");
			},
			//检查当前步奏是否完成
			checkedCurrentStepCompleted:function(activeStepId){
				var ret = true,stepCheckedResult = {};
				var completedStepArr = userGuideConfig.completedStep[activeStepId];
				if(!completedStepArr){ return {success:ret,data:stepCheckedResult}; }
				var passData = modelWrapper.model().export();
				$.each(completedStepArr,function(i,n){
					var val = getValue(passData, n.path);
					// 校验字段值，现在只做非空校验，todo 以后做扩展
					if(val != undefined){
						var res = validRequired(val,n);
						if(res){
							stepCheckedResult[i] = res;
						}
					}
				});
				if(!$.isEmptyObject(stepCheckedResult)){ret = false;}
				return {success:ret,data:stepCheckedResult}
			},
			//获取编辑区域dom
			getEditDom:function(itemId){
				var edit = $("#edit");
				var item,items = itemId.split(".");
				if(items.length ==1){
					item = $("#" + items[0]);
				}else{
					item = $("#" + items[1]);
				}
				return item;
			},
			//获取正面区域的二级导航数组
			getFaceFieldsStepArr:function(){
				userGuide.faceFieldsStepArr = [];
				$("#pass [data-rel=tooltip]:visible").each(function(i,n){
					userGuide.faceFieldsStepArr.push($(this).attr("data-pass-range"));
				});
			},
			//获取正面区域的下一步的id
			getNextFaceStepId:function(activeFaceStepId){
				userGuide.getFaceFieldsStepArr();
				var arr = userGuide.faceFieldsStepArr;
				var index = $.inArray(activeFaceStepId,arr);
				if(index < arr.length-1){
					return arr[index+1];
				}else{
					return null
				}
			},
			bindEvent:function(){
				var guide = userGuide.guide;
				//点击“我知道了”结束新手引导
				guide.find(".edit-userGuide-action a[data-role=skip]").off("click").on("click",function(e){
					userGuide.hideUserGuide();
				});
				//点击“下一步”跳转
				guide.find(".edit-userGuide-action a[data-role=nextStep]").off("click").on("click",function(e){
					userGuide.handleNextStep();
				});
				//点击提示“x”隐藏提示信息
				guide.find(".close-tool").off("click").on("click",function(e){
					userGuide.hideTool();
				});
			},
			//为正常编辑模式绑定下一步引导
			bindEditNextBtnClick:function(){
				$("#edit button[data-role=nextStep]").off("click").on("click",function(e){
					var nextId = userGuide.getNextStepId();
					userGuide.showUserGuideStep(nextId);
				});
			}
		}
		userGuide.bindEditNextBtnClick();
		window.userGuide = userGuide;
    });
    /* 布局，样式
     *  固定大小 ，
     *  */
    $(function () {
        var main = $('#main'),
            editContainer = $('#edit'),
            passContainer = $('.pass-container'),
            footerContainer = $('.ui-footer');
		var ww = window.innerWidth,
			wh = window.innerHeight,
			ew = editContainer.outerWidth(),
			topHeight = 77,//顶部高度
			minPassOffsetTop = -72,//pass预览界面的顶部最小位移
			passHeight = 420,//pass的高度
			passContainerHeight = parseInt(passContainer.css("height")),
			pbh = wh - topHeight;
		//获取刷新pass区域的最大高度
		function getPbh (){
			wh = window.innerHeight;
			pbh = wh - topHeight;
		}
		//重新定位pass的手机框图位置
		function placePassContainer(){
			var passTop;
			getPbh ();
			if(pbh < passContainerHeight+10){
				passTop = pbh > passHeight ? (pbh-passHeight)/2-72 : minPassOffsetTop;
				passContainer.css({top:passTop});
			}else{
				passContainer.css({top:10});
			}
		}
		//初始化页面布局
		var initEditLayout = function (){
			ww = window.innerWidth;
			wh = window.innerHeight;
			getPbh();
			//固定页面高度 延时50ms，使得动画更流畅
			setTimeout(function(){
				main.css("height",pbh);
				//高度不够是隐藏部分手机框图
				placePassContainer();
				//向右移动文案编辑的滚动条到页面边缘
				editContainer.css("padding-right",ww - editContainer.offset().left - ew);
			},100);
			if(pbh < passContainerHeight){
				$("#browserHeightErr").addClass("in");
			}else{
				$("#browserHeightErr").remove();
			}
			//5秒后隐藏底部
			setTimeout(function(){
				footerContainer.css("bottom","-60px");
				$("#browserHeightErr").alert("close");
			},5000);
		};
        if(navigator.userAgent.indexOf("Chrome") == -1 && navigator.userAgent.indexOf("Firefox") == -1){
            $("#browserHeightErr").alert("close");
            $("#browserErr").addClass("in");
        }else{
        	$("#browserErr").remove();
        }
        //if(navigator.userAgent.indexOf("Chrome") == -1){
        	$(".pass-container").attr('id','bgimg');
        //}

		initEditLayout();
		//窗口大小改变时
		var isLayouting = null;
		$(window).resize(function(e){
			wh = window.innerHeight;
			ww = window.innerWidth;
			getPbh();
			clearTimeout(isLayouting);
			isLayouting = setTimeout(function(){
				//固定页面高度
				main.css("height",wh - topHeight);
				//向右移动文案编辑的滚动条到页面边缘
				editContainer.css("padding-right",ww - editContainer.offset().left - ew);
				var pbh = wh - topHeight,passTop;
				//高度不够是隐藏部分手机框图
				placePassContainer();
				//如果正在进行新手引导则重新渲染新手引导
				if($("input[name=rookie]").val() == "true"){
					userGuide.placeUserGuide();
				}
			},20);
		});
    });
    //初始化时间插件
    $(function () {
        $('.datetimepicker').datetimepicker({
            format: 'yyyy-MM-dd hh:mm:ss',
            language:"zh-CN",
            autoclose:true
        });
    });
    //初始化提示插件
    $(function(){
        $("[data-rel=tooltip]").tooltip({
            placement:"right",
			animation:false,
            trigger:"manual"
        });
    });
	//折叠的一些处理
	$("#J-appInfo").on("hidden",function(){
		$("#edit").animate({
			scrollTop:70
		},300);
		$("#J-appInfo").next().find("[data-toggle=collapse]").addClass("intro-down").removeClass("intro-up");
	});
	$("#J-appInfo").on("shown",function(){
		$("#J-appInfo").next().find("[data-toggle=collapse]").addClass("intro-up").removeClass("intro-down");
	});
}).call(this);
